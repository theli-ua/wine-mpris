// Bindings generated by `windows-bindgen` 0.55.0

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]
use windows::Foundation;
pub mod Media {
    use windows::Media::*;
    windows_core::imp::com_interface!(
        ISystemMediaTransportControls,
        ISystemMediaTransportControls_Vtbl,
        0x99fa3ff4_1742_42a6_902e_087d41f965ec
    );
    #[repr(C)]
    pub struct ISystemMediaTransportControls_Vtbl {
        pub base__: windows_core::IInspectable_Vtbl,
        pub PlaybackStatus: unsafe extern "system" fn(
            *mut core::ffi::c_void,
            *mut MediaPlaybackStatus,
        ) -> windows_core::HRESULT,
        pub SetPlaybackStatus: unsafe extern "system" fn(
            *mut core::ffi::c_void,
            MediaPlaybackStatus,
        ) -> windows_core::HRESULT,
        pub DisplayUpdater: unsafe extern "system" fn(
            *mut core::ffi::c_void,
            *mut *mut core::ffi::c_void,
        ) -> windows_core::HRESULT,
        pub SoundLevel: unsafe extern "system" fn(
            *mut core::ffi::c_void,
            *mut SoundLevel,
        ) -> windows_core::HRESULT,
        pub IsEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, *mut bool) -> windows_core::HRESULT,
        pub SetIsEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, bool) -> windows_core::HRESULT,
        pub IsPlayEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, *mut bool) -> windows_core::HRESULT,
        pub SetIsPlayEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, bool) -> windows_core::HRESULT,
        pub IsStopEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, *mut bool) -> windows_core::HRESULT,
        pub SetIsStopEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, bool) -> windows_core::HRESULT,
        pub IsPauseEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, *mut bool) -> windows_core::HRESULT,
        pub SetIsPauseEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, bool) -> windows_core::HRESULT,
        pub IsRecordEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, *mut bool) -> windows_core::HRESULT,
        pub SetIsRecordEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, bool) -> windows_core::HRESULT,
        pub IsFastForwardEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, *mut bool) -> windows_core::HRESULT,
        pub SetIsFastForwardEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, bool) -> windows_core::HRESULT,
        pub IsRewindEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, *mut bool) -> windows_core::HRESULT,
        pub SetIsRewindEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, bool) -> windows_core::HRESULT,
        pub IsPreviousEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, *mut bool) -> windows_core::HRESULT,
        pub SetIsPreviousEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, bool) -> windows_core::HRESULT,
        pub IsNextEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, *mut bool) -> windows_core::HRESULT,
        pub SetIsNextEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, bool) -> windows_core::HRESULT,
        pub IsChannelUpEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, *mut bool) -> windows_core::HRESULT,
        pub SetIsChannelUpEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, bool) -> windows_core::HRESULT,
        pub IsChannelDownEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, *mut bool) -> windows_core::HRESULT,
        pub SetIsChannelDownEnabled:
            unsafe extern "system" fn(*mut core::ffi::c_void, bool) -> windows_core::HRESULT,
        pub ButtonPressed: unsafe extern "system" fn(
            *mut core::ffi::c_void,
            *mut core::ffi::c_void,
            *mut super::Foundation::EventRegistrationToken,
        ) -> windows_core::HRESULT,
        pub RemoveButtonPressed: unsafe extern "system" fn(
            *mut core::ffi::c_void,
            super::Foundation::EventRegistrationToken,
        ) -> windows_core::HRESULT,
        pub PropertyChanged: unsafe extern "system" fn(
            *mut core::ffi::c_void,
            *mut core::ffi::c_void,
            *mut super::Foundation::EventRegistrationToken,
        ) -> windows_core::HRESULT,
        pub RemovePropertyChanged: unsafe extern "system" fn(
            *mut core::ffi::c_void,
            super::Foundation::EventRegistrationToken,
        ) -> windows_core::HRESULT,
    }
    #[repr(transparent)]
    #[derive(PartialEq, Eq, core::fmt::Debug, Clone)]
    pub struct SystemMediaTransportControls(windows_core::IUnknown);
    windows_core::imp::interface_hierarchy!(
        SystemMediaTransportControls,
        windows_core::IUnknown,
        windows_core::IInspectable
    );
    impl SystemMediaTransportControls {
        pub fn PlaybackStatus(&self) -> windows_core::Result<MediaPlaybackStatus> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).PlaybackStatus)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetPlaybackStatus(&self, value: MediaPlaybackStatus) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetPlaybackStatus)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn DisplayUpdater(
            &self,
        ) -> windows_core::Result<SystemMediaTransportControlsDisplayUpdater> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).DisplayUpdater)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .and_then(|| windows_core::Type::from_abi(result__))
            }
        }
        pub fn SoundLevel(&self) -> windows_core::Result<SoundLevel> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).SoundLevel)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn IsEnabled(&self) -> windows_core::Result<bool> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).IsEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetIsEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetIsEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn IsPlayEnabled(&self) -> windows_core::Result<bool> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).IsPlayEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetIsPlayEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetIsPlayEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn IsStopEnabled(&self) -> windows_core::Result<bool> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).IsStopEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetIsStopEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetIsStopEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn IsPauseEnabled(&self) -> windows_core::Result<bool> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).IsPauseEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetIsPauseEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetIsPauseEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn IsRecordEnabled(&self) -> windows_core::Result<bool> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).IsRecordEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetIsRecordEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetIsRecordEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn IsFastForwardEnabled(&self) -> windows_core::Result<bool> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).IsFastForwardEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetIsFastForwardEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetIsFastForwardEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn IsRewindEnabled(&self) -> windows_core::Result<bool> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).IsRewindEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetIsRewindEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetIsRewindEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn IsPreviousEnabled(&self) -> windows_core::Result<bool> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).IsPreviousEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetIsPreviousEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetIsPreviousEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn IsNextEnabled(&self) -> windows_core::Result<bool> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).IsNextEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetIsNextEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetIsNextEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn IsChannelUpEnabled(&self) -> windows_core::Result<bool> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).IsChannelUpEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetIsChannelUpEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetIsChannelUpEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn IsChannelDownEnabled(&self) -> windows_core::Result<bool> {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).IsChannelDownEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetIsChannelDownEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).SetIsChannelDownEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn ButtonPressed<P0>(
            &self,
            handler: P0,
        ) -> windows_core::Result<super::Foundation::EventRegistrationToken>
        where
            P0: windows_core::IntoParam<
                super::Foundation::TypedEventHandler<
                    SystemMediaTransportControls,
                    SystemMediaTransportControlsButtonPressedEventArgs,
                >,
            >,
        {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).ButtonPressed)(
                    windows_core::Interface::as_raw(this),
                    handler.into_param().abi(),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn RemoveButtonPressed(
            &self,
            token: super::Foundation::EventRegistrationToken,
        ) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).RemoveButtonPressed)(
                    windows_core::Interface::as_raw(this),
                    token,
                )
                .ok()
            }
        }
        pub fn PropertyChanged<P0>(
            &self,
            handler: P0,
        ) -> windows_core::Result<super::Foundation::EventRegistrationToken>
        where
            P0: windows_core::IntoParam<
                super::Foundation::TypedEventHandler<
                    SystemMediaTransportControls,
                    SystemMediaTransportControlsPropertyChangedEventArgs,
                >,
            >,
        {
            let this = self;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).PropertyChanged)(
                    windows_core::Interface::as_raw(this),
                    handler.into_param().abi(),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn RemovePropertyChanged(
            &self,
            token: super::Foundation::EventRegistrationToken,
        ) -> windows_core::Result<()> {
            let this = self;
            unsafe {
                (windows_core::Interface::vtable(this).RemovePropertyChanged)(
                    windows_core::Interface::as_raw(this),
                    token,
                )
                .ok()
            }
        }
        pub fn AutoRepeatMode(&self) -> windows_core::Result<MediaPlaybackAutoRepeatMode> {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).AutoRepeatMode)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetAutoRepeatMode(
            &self,
            value: MediaPlaybackAutoRepeatMode,
        ) -> windows_core::Result<()> {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                (windows_core::Interface::vtable(this).SetAutoRepeatMode)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn ShuffleEnabled(&self) -> windows_core::Result<bool> {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).ShuffleEnabled)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetShuffleEnabled(&self, value: bool) -> windows_core::Result<()> {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                (windows_core::Interface::vtable(this).SetShuffleEnabled)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn PlaybackRate(&self) -> windows_core::Result<f64> {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).PlaybackRate)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn SetPlaybackRate(&self, value: f64) -> windows_core::Result<()> {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                (windows_core::Interface::vtable(this).SetPlaybackRate)(
                    windows_core::Interface::as_raw(this),
                    value,
                )
                .ok()
            }
        }
        pub fn UpdateTimelineProperties<P0>(
            &self,
            timelineproperties: P0,
        ) -> windows_core::Result<()>
        where
            P0: windows_core::IntoParam<SystemMediaTransportControlsTimelineProperties>,
        {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                (windows_core::Interface::vtable(this).UpdateTimelineProperties)(
                    windows_core::Interface::as_raw(this),
                    timelineproperties.into_param().abi(),
                )
                .ok()
            }
        }
        pub fn PlaybackPositionChangeRequested<P0>(
            &self,
            handler: P0,
        ) -> windows_core::Result<super::Foundation::EventRegistrationToken>
        where
            P0: windows_core::IntoParam<
                super::Foundation::TypedEventHandler<
                    SystemMediaTransportControls,
                    PlaybackPositionChangeRequestedEventArgs,
                >,
            >,
        {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).PlaybackPositionChangeRequested)(
                    windows_core::Interface::as_raw(this),
                    handler.into_param().abi(),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn RemovePlaybackPositionChangeRequested(
            &self,
            token: super::Foundation::EventRegistrationToken,
        ) -> windows_core::Result<()> {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                (windows_core::Interface::vtable(this).RemovePlaybackPositionChangeRequested)(
                    windows_core::Interface::as_raw(this),
                    token,
                )
                .ok()
            }
        }
        pub fn PlaybackRateChangeRequested<P0>(
            &self,
            handler: P0,
        ) -> windows_core::Result<super::Foundation::EventRegistrationToken>
        where
            P0: windows_core::IntoParam<
                super::Foundation::TypedEventHandler<
                    SystemMediaTransportControls,
                    PlaybackRateChangeRequestedEventArgs,
                >,
            >,
        {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).PlaybackRateChangeRequested)(
                    windows_core::Interface::as_raw(this),
                    handler.into_param().abi(),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn RemovePlaybackRateChangeRequested(
            &self,
            token: super::Foundation::EventRegistrationToken,
        ) -> windows_core::Result<()> {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                (windows_core::Interface::vtable(this).RemovePlaybackRateChangeRequested)(
                    windows_core::Interface::as_raw(this),
                    token,
                )
                .ok()
            }
        }
        pub fn ShuffleEnabledChangeRequested<P0>(
            &self,
            handler: P0,
        ) -> windows_core::Result<super::Foundation::EventRegistrationToken>
        where
            P0: windows_core::IntoParam<
                super::Foundation::TypedEventHandler<
                    SystemMediaTransportControls,
                    ShuffleEnabledChangeRequestedEventArgs,
                >,
            >,
        {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).ShuffleEnabledChangeRequested)(
                    windows_core::Interface::as_raw(this),
                    handler.into_param().abi(),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn RemoveShuffleEnabledChangeRequested(
            &self,
            token: super::Foundation::EventRegistrationToken,
        ) -> windows_core::Result<()> {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                (windows_core::Interface::vtable(this).RemoveShuffleEnabledChangeRequested)(
                    windows_core::Interface::as_raw(this),
                    token,
                )
                .ok()
            }
        }
        pub fn AutoRepeatModeChangeRequested<P0>(
            &self,
            handler: P0,
        ) -> windows_core::Result<super::Foundation::EventRegistrationToken>
        where
            P0: windows_core::IntoParam<
                super::Foundation::TypedEventHandler<
                    SystemMediaTransportControls,
                    AutoRepeatModeChangeRequestedEventArgs,
                >,
            >,
        {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).AutoRepeatModeChangeRequested)(
                    windows_core::Interface::as_raw(this),
                    handler.into_param().abi(),
                    &mut result__,
                )
                .map(|| result__)
            }
        }
        pub fn RemoveAutoRepeatModeChangeRequested(
            &self,
            token: super::Foundation::EventRegistrationToken,
        ) -> windows_core::Result<()> {
            let this = &windows_core::Interface::cast::<ISystemMediaTransportControls2>(self)?;
            unsafe {
                (windows_core::Interface::vtable(this).RemoveAutoRepeatModeChangeRequested)(
                    windows_core::Interface::as_raw(this),
                    token,
                )
                .ok()
            }
        }
        pub fn GetForCurrentView() -> windows_core::Result<SystemMediaTransportControls> {
            Self::ISystemMediaTransportControlsStatics(|this| unsafe {
                let mut result__ = std::mem::zeroed();
                (windows_core::Interface::vtable(this).GetForCurrentView)(
                    windows_core::Interface::as_raw(this),
                    &mut result__,
                )
                .and_then(|| windows_core::Type::from_abi(result__))
            })
        }
        #[doc(hidden)]
        pub fn ISystemMediaTransportControlsStatics<
            R,
            F: FnOnce(&ISystemMediaTransportControlsStatics) -> windows_core::Result<R>,
        >(
            callback: F,
        ) -> windows_core::Result<R> {
            static SHARED: windows_core::imp::FactoryCache<
                SystemMediaTransportControls,
                ISystemMediaTransportControlsStatics,
            > = windows_core::imp::FactoryCache::new();
            SHARED.call(callback)
        }
    }
    impl windows_core::RuntimeType for SystemMediaTransportControls {
        const SIGNATURE: windows_core::imp::ConstBuffer =
            windows_core::imp::ConstBuffer::for_class::<Self>();
    }
    unsafe impl windows_core::Interface for SystemMediaTransportControls {
        type Vtable = ISystemMediaTransportControls_Vtbl;
        const IID: windows_core::GUID =
            <ISystemMediaTransportControls as windows_core::Interface>::IID;
    }
    impl windows_core::RuntimeName for SystemMediaTransportControls {
        const NAME: &'static str = "Windows.Media.SystemMediaTransportControls";
    }
    unsafe impl Send for SystemMediaTransportControls {}
    unsafe impl Sync for SystemMediaTransportControls {}
    pub trait ISystemMediaTransportControls_Impl: Sized {
        fn PlaybackStatus(&self) -> windows_core::Result<MediaPlaybackStatus>;
        fn SetPlaybackStatus(&self, value: MediaPlaybackStatus) -> windows_core::Result<()>;
        fn DisplayUpdater(
            &self,
        ) -> windows_core::Result<SystemMediaTransportControlsDisplayUpdater>;
        fn SoundLevel(&self) -> windows_core::Result<SoundLevel>;
        fn IsEnabled(&self) -> windows_core::Result<bool>;
        fn SetIsEnabled(&self, value: bool) -> windows_core::Result<()>;
        fn IsPlayEnabled(&self) -> windows_core::Result<bool>;
        fn SetIsPlayEnabled(&self, value: bool) -> windows_core::Result<()>;
        fn IsStopEnabled(&self) -> windows_core::Result<bool>;
        fn SetIsStopEnabled(&self, value: bool) -> windows_core::Result<()>;
        fn IsPauseEnabled(&self) -> windows_core::Result<bool>;
        fn SetIsPauseEnabled(&self, value: bool) -> windows_core::Result<()>;
        fn IsRecordEnabled(&self) -> windows_core::Result<bool>;
        fn SetIsRecordEnabled(&self, value: bool) -> windows_core::Result<()>;
        fn IsFastForwardEnabled(&self) -> windows_core::Result<bool>;
        fn SetIsFastForwardEnabled(&self, value: bool) -> windows_core::Result<()>;
        fn IsRewindEnabled(&self) -> windows_core::Result<bool>;
        fn SetIsRewindEnabled(&self, value: bool) -> windows_core::Result<()>;
        fn IsPreviousEnabled(&self) -> windows_core::Result<bool>;
        fn SetIsPreviousEnabled(&self, value: bool) -> windows_core::Result<()>;
        fn IsNextEnabled(&self) -> windows_core::Result<bool>;
        fn SetIsNextEnabled(&self, value: bool) -> windows_core::Result<()>;
        fn IsChannelUpEnabled(&self) -> windows_core::Result<bool>;
        fn SetIsChannelUpEnabled(&self, value: bool) -> windows_core::Result<()>;
        fn IsChannelDownEnabled(&self) -> windows_core::Result<bool>;
        fn SetIsChannelDownEnabled(&self, value: bool) -> windows_core::Result<()>;
        fn ButtonPressed(
            &self,
            handler: Option<
                &super::Foundation::TypedEventHandler<
                    SystemMediaTransportControls,
                    SystemMediaTransportControlsButtonPressedEventArgs,
                >,
            >,
        ) -> windows_core::Result<super::Foundation::EventRegistrationToken>;
        fn RemoveButtonPressed(
            &self,
            token: &super::Foundation::EventRegistrationToken,
        ) -> windows_core::Result<()>;
        fn PropertyChanged(
            &self,
            handler: Option<
                &super::Foundation::TypedEventHandler<
                    SystemMediaTransportControls,
                    SystemMediaTransportControlsPropertyChangedEventArgs,
                >,
            >,
        ) -> windows_core::Result<super::Foundation::EventRegistrationToken>;
        fn RemovePropertyChanged(
            &self,
            token: &super::Foundation::EventRegistrationToken,
        ) -> windows_core::Result<()>;
    }
    impl windows_core::RuntimeName for ISystemMediaTransportControls {
        const NAME: &'static str = "Windows.Media.ISystemMediaTransportControls";
    }
    impl ISystemMediaTransportControls_Vtbl {
        pub const fn new<
            Identity: windows_core::IUnknownImpl<Impl = Impl>,
            Impl: ISystemMediaTransportControls_Impl,
            const OFFSET: isize,
        >() -> ISystemMediaTransportControls_Vtbl {
            unsafe extern "system" fn PlaybackStatus<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut MediaPlaybackStatus,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.PlaybackStatus() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetPlaybackStatus<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: MediaPlaybackStatus,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetPlaybackStatus(value).into()
            }
            unsafe extern "system" fn DisplayUpdater<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut *mut core::ffi::c_void,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.DisplayUpdater() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        core::mem::forget(ok__);
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SoundLevel<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut SoundLevel,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.SoundLevel() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn IsEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.IsEnabled() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetIsEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetIsEnabled(value).into()
            }
            unsafe extern "system" fn IsPlayEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.IsPlayEnabled() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetIsPlayEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetIsPlayEnabled(value).into()
            }
            unsafe extern "system" fn IsStopEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.IsStopEnabled() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetIsStopEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetIsStopEnabled(value).into()
            }
            unsafe extern "system" fn IsPauseEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.IsPauseEnabled() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetIsPauseEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetIsPauseEnabled(value).into()
            }
            unsafe extern "system" fn IsRecordEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.IsRecordEnabled() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetIsRecordEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetIsRecordEnabled(value).into()
            }
            unsafe extern "system" fn IsFastForwardEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.IsFastForwardEnabled() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetIsFastForwardEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetIsFastForwardEnabled(value).into()
            }
            unsafe extern "system" fn IsRewindEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.IsRewindEnabled() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetIsRewindEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetIsRewindEnabled(value).into()
            }
            unsafe extern "system" fn IsPreviousEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.IsPreviousEnabled() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetIsPreviousEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetIsPreviousEnabled(value).into()
            }
            unsafe extern "system" fn IsNextEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.IsNextEnabled() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetIsNextEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetIsNextEnabled(value).into()
            }
            unsafe extern "system" fn IsChannelUpEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.IsChannelUpEnabled() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetIsChannelUpEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetIsChannelUpEnabled(value).into()
            }
            unsafe extern "system" fn IsChannelDownEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                result__: *mut bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.IsChannelDownEnabled() {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn SetIsChannelDownEnabled<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                value: bool,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.SetIsChannelDownEnabled(value).into()
            }
            unsafe extern "system" fn ButtonPressed<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                handler: *mut core::ffi::c_void,
                result__: *mut super::Foundation::EventRegistrationToken,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.ButtonPressed(windows_core::from_raw_borrowed(&handler)) {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn RemoveButtonPressed<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                token: super::Foundation::EventRegistrationToken,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.RemoveButtonPressed(core::mem::transmute(&token))
                    .into()
            }
            unsafe extern "system" fn PropertyChanged<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                handler: *mut core::ffi::c_void,
                result__: *mut super::Foundation::EventRegistrationToken,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                match this.PropertyChanged(windows_core::from_raw_borrowed(&handler)) {
                    Ok(ok__) => {
                        core::ptr::write(result__, core::mem::transmute_copy(&ok__));
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
            unsafe extern "system" fn RemovePropertyChanged<
                Identity: windows_core::IUnknownImpl<Impl = Impl>,
                Impl: ISystemMediaTransportControls_Impl,
                const OFFSET: isize,
            >(
                this: *mut core::ffi::c_void,
                token: super::Foundation::EventRegistrationToken,
            ) -> windows_core::HRESULT {
                let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                let this = (*this).get_impl();
                this.RemovePropertyChanged(core::mem::transmute(&token))
                    .into()
            }
            Self {
                base__: windows_core::IInspectable_Vtbl::new::<
                    Identity,
                    ISystemMediaTransportControls,
                    OFFSET,
                >(),
                PlaybackStatus: PlaybackStatus::<Identity, Impl, OFFSET>,
                SetPlaybackStatus: SetPlaybackStatus::<Identity, Impl, OFFSET>,
                DisplayUpdater: DisplayUpdater::<Identity, Impl, OFFSET>,
                SoundLevel: SoundLevel::<Identity, Impl, OFFSET>,
                IsEnabled: IsEnabled::<Identity, Impl, OFFSET>,
                SetIsEnabled: SetIsEnabled::<Identity, Impl, OFFSET>,
                IsPlayEnabled: IsPlayEnabled::<Identity, Impl, OFFSET>,
                SetIsPlayEnabled: SetIsPlayEnabled::<Identity, Impl, OFFSET>,
                IsStopEnabled: IsStopEnabled::<Identity, Impl, OFFSET>,
                SetIsStopEnabled: SetIsStopEnabled::<Identity, Impl, OFFSET>,
                IsPauseEnabled: IsPauseEnabled::<Identity, Impl, OFFSET>,
                SetIsPauseEnabled: SetIsPauseEnabled::<Identity, Impl, OFFSET>,
                IsRecordEnabled: IsRecordEnabled::<Identity, Impl, OFFSET>,
                SetIsRecordEnabled: SetIsRecordEnabled::<Identity, Impl, OFFSET>,
                IsFastForwardEnabled: IsFastForwardEnabled::<Identity, Impl, OFFSET>,
                SetIsFastForwardEnabled: SetIsFastForwardEnabled::<Identity, Impl, OFFSET>,
                IsRewindEnabled: IsRewindEnabled::<Identity, Impl, OFFSET>,
                SetIsRewindEnabled: SetIsRewindEnabled::<Identity, Impl, OFFSET>,
                IsPreviousEnabled: IsPreviousEnabled::<Identity, Impl, OFFSET>,
                SetIsPreviousEnabled: SetIsPreviousEnabled::<Identity, Impl, OFFSET>,
                IsNextEnabled: IsNextEnabled::<Identity, Impl, OFFSET>,
                SetIsNextEnabled: SetIsNextEnabled::<Identity, Impl, OFFSET>,
                IsChannelUpEnabled: IsChannelUpEnabled::<Identity, Impl, OFFSET>,
                SetIsChannelUpEnabled: SetIsChannelUpEnabled::<Identity, Impl, OFFSET>,
                IsChannelDownEnabled: IsChannelDownEnabled::<Identity, Impl, OFFSET>,
                SetIsChannelDownEnabled: SetIsChannelDownEnabled::<Identity, Impl, OFFSET>,
                ButtonPressed: ButtonPressed::<Identity, Impl, OFFSET>,
                RemoveButtonPressed: RemoveButtonPressed::<Identity, Impl, OFFSET>,
                PropertyChanged: PropertyChanged::<Identity, Impl, OFFSET>,
                RemovePropertyChanged: RemovePropertyChanged::<Identity, Impl, OFFSET>,
            }
        }
        pub fn matches(iid: &windows_core::GUID) -> bool {
            iid == &<ISystemMediaTransportControls as windows_core::Interface>::IID
        }
    }
}
